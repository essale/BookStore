@model IEnumerable<BookStore.Models.Customer>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2></h2>

<p>
    <a asp-action="Create" class="btn button-image userBookButton">Create New</a> 
</p>
<form asp-controller="Customers" asp-action="Index">
    <p>

        <div class="input-group stylish-input-group">
            
            <input type="text" name="email" value="" class="form-control" placeholder="Email Address:" />
            <input type="text" name="firstName" value="" class="form-control" placeholder="First Name:" />
            <input type="text" name="lastName" value="" class="form-control" placeholder="Last Name:" />
            <span class="input-group-addon">
                <button class="btn button-image-big searchButton" type="submit"></button>
            </span>
        </div>
        <!--<input type="submit" value="Filter" />-->
    </p>
</form>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegistrationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegistrationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    <a asp-action="Edit" class="btn button-image editBookButton" asp-route-id="@item.CustomerId">Edit</a> |
                    <a asp-action="Details" class="btn button-image detBookButton" asp-route-id="@item.CustomerId">Details</a> |
                    <a asp-action="Delete" class="btn button-image delBookButton" asp-route-id="@item.CustomerId">Delete</a>

                </td>
            </tr>
        }
    </tbody>
</table>



<div class="row">
    <div class="card col-md-12" style=" height: 60vh;  top: 21vh; left: 0.5rem;">
        <div id="bing-map" style="height: 100%; width: 100%;"></div>
    </div>
</div>
<div class="row map"></div>
    <script type="text/javascript" src="https://www.bing.com/api/maps/mapcontrol?callback=GetMap&branch=experimental&key=As2jKJ-6dOcZEB8bhfFcF6FMAkc8tmX5AQyXSrsGark-mIYfh5YGvATS4ntLJqRa" async defer></script>
    <script type="text/javascript">

        function GetMap(parameters) {
            var icon = location.origin + '/images/marker-icon.png';
            var iconSelected = location.origin + '/images/marker-icon-selected.png';

            window.map = new Microsoft.Maps.Map('#bing-map',
                {
                    credentials: 'As2jKJ-6dOcZEB8bhfFcF6FMAkc8tmX5AQyXSrsGark-mIYfh5YGvATS4ntLJqRa',
                    center: new Microsoft.Maps.Location(24.454377327147014, -2.721990915834307),
                    mapTypeId: Microsoft.Maps.MapTypeId.aerial,
                    zoom: 3
                });

            //ajax Join  customer(email + cuntry) books(book url) orders(book id + quantity)
            window.markers = {};
            var url = "Customers/GetFullData"
            $.ajax({
                url: url,
                complete: function (result) {
                    //console.log(result.responseJSON);
                    var customers = result.responseJSON;
                    for (cust in customers) {
                        var customer = customers[cust];
                        console.log(customer)
                        var country = getCuntry(customer.country);
                        //console.log(country)

                        var pin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(country.lat, country.lon),
                            {
                                icon: icon,
                                anchor: new Microsoft.Maps.Point(12, 39)
                            });

                        window.markers[customer.emailAddress] = {
                            marker: pin
                        }

                        window.map.entities.push(pin);
                    }

                },
                //dataType: dataType
            });
        }

    </script>
    <script type="text/javascript" src="~/js/cuntries.js" async defer></script>
